# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import faculdade_pb2 as faculdade__pb2


class FaculdadeStub(object):
    """Definindo o servico Faculdade
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InserirMatricula = channel.unary_unary(
                '/Faculdade/InserirMatricula',
                request_serializer=faculdade__pb2.Matricula.SerializeToString,
                response_deserializer=faculdade__pb2.Res.FromString,
                )
        self.AtualizarNota = channel.unary_unary(
                '/Faculdade/AtualizarNota',
                request_serializer=faculdade__pb2.Matricula.SerializeToString,
                response_deserializer=faculdade__pb2.Res.FromString,
                )
        self.AtualizarFaltas = channel.unary_unary(
                '/Faculdade/AtualizarFaltas',
                request_serializer=faculdade__pb2.Matricula.SerializeToString,
                response_deserializer=faculdade__pb2.Res.FromString,
                )
        self.ListarAlunosDaDisciplina = channel.unary_unary(
                '/Faculdade/ListarAlunosDaDisciplina',
                request_serializer=faculdade__pb2.Matricula.SerializeToString,
                response_deserializer=faculdade__pb2.ListaAlunos.FromString,
                )
        self.ListarBoletimDoAluno = channel.unary_unary(
                '/Faculdade/ListarBoletimDoAluno',
                request_serializer=faculdade__pb2.Matricula.SerializeToString,
                response_deserializer=faculdade__pb2.Boletim.FromString,
                )


class FaculdadeServicer(object):
    """Definindo o servico Faculdade
    """

    def InserirMatricula(self, request, context):
        """Envia dados da matricula e retorna uma resposta
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AtualizarNota(self, request, context):
        """Envia dados da matricula e retorna uma resposta
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AtualizarFaltas(self, request, context):
        """Envia dados da matricula e retorna uma resposta
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListarAlunosDaDisciplina(self, request, context):
        """Envia dados da matricula e retorna um array de alunos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListarBoletimDoAluno(self, request, context):
        """Envia dados da matricula e retorna um array de disciplina e um array de matricula
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FaculdadeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InserirMatricula': grpc.unary_unary_rpc_method_handler(
                    servicer.InserirMatricula,
                    request_deserializer=faculdade__pb2.Matricula.FromString,
                    response_serializer=faculdade__pb2.Res.SerializeToString,
            ),
            'AtualizarNota': grpc.unary_unary_rpc_method_handler(
                    servicer.AtualizarNota,
                    request_deserializer=faculdade__pb2.Matricula.FromString,
                    response_serializer=faculdade__pb2.Res.SerializeToString,
            ),
            'AtualizarFaltas': grpc.unary_unary_rpc_method_handler(
                    servicer.AtualizarFaltas,
                    request_deserializer=faculdade__pb2.Matricula.FromString,
                    response_serializer=faculdade__pb2.Res.SerializeToString,
            ),
            'ListarAlunosDaDisciplina': grpc.unary_unary_rpc_method_handler(
                    servicer.ListarAlunosDaDisciplina,
                    request_deserializer=faculdade__pb2.Matricula.FromString,
                    response_serializer=faculdade__pb2.ListaAlunos.SerializeToString,
            ),
            'ListarBoletimDoAluno': grpc.unary_unary_rpc_method_handler(
                    servicer.ListarBoletimDoAluno,
                    request_deserializer=faculdade__pb2.Matricula.FromString,
                    response_serializer=faculdade__pb2.Boletim.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Faculdade', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Faculdade(object):
    """Definindo o servico Faculdade
    """

    @staticmethod
    def InserirMatricula(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Faculdade/InserirMatricula',
            faculdade__pb2.Matricula.SerializeToString,
            faculdade__pb2.Res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AtualizarNota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Faculdade/AtualizarNota',
            faculdade__pb2.Matricula.SerializeToString,
            faculdade__pb2.Res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AtualizarFaltas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Faculdade/AtualizarFaltas',
            faculdade__pb2.Matricula.SerializeToString,
            faculdade__pb2.Res.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListarAlunosDaDisciplina(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Faculdade/ListarAlunosDaDisciplina',
            faculdade__pb2.Matricula.SerializeToString,
            faculdade__pb2.ListaAlunos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListarBoletimDoAluno(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Faculdade/ListarBoletimDoAluno',
            faculdade__pb2.Matricula.SerializeToString,
            faculdade__pb2.Boletim.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
